{"ast":null,"code":"import _objectSpread from\"/home/springnuance/Desktop/part3/The Phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/springnuance/Desktop/part3/The Phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Person from'./components/Person';import Notifications from'./components/Notifications';import personService from'./services/personService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Filter=function Filter(_ref){var filter=_ref.filter,handleFilter=_ref.handleFilter;return/*#__PURE__*/_jsxs(\"div\",{children:[\"Filter name \",/*#__PURE__*/_jsx(\"input\",{value:filter,onChange:handleFilter})]});};var Persons=function Persons(_ref2){var PersonsToShow=_ref2.PersonsToShow,deletePerson=_ref2.deletePerson;return/*#__PURE__*/_jsx(\"ul\",{children:PersonsToShow.map(function(person,i){return/*#__PURE__*/_jsx(Person,{person:person,deletePerson:deletePerson},i);})});};var PersonForm=function PersonForm(_ref3){var addPerson=_ref3.addPerson,newName=_ref3.newName,handleNameChange=_ref3.handleNameChange,newNumber=_ref3.newNumber,handleNumberChange=_ref3.handleNumberChange;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:addPerson,children:[/*#__PURE__*/_jsxs(\"div\",{children:[\" Name: \",/*#__PURE__*/_jsx(\"input\",{value:newName,onChange:handleNameChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\" Number: \",/*#__PURE__*/_jsx(\"input\",{value:newNumber,onChange:handleNumberChange})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"add\"})})]});};var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),persons=_useState2[0],setPersons=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newNumber=_useState6[0],setNewNumber=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),filter=_useState8[0],setFilter=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];useEffect(function(){personService.getAll().then(function(initialPersons){setPersons(initialPersons);});},[]);var PersonsToShow=!filter?persons:persons.filter(function(person){return person.name.toLowerCase().includes(filter);});var addPerson=function addPerson(event){event.preventDefault();if(persons.map(function(person){return person.name;}).includes(newName)){var personInList=persons.filter(function(person){return person.name===newName;})[0];var newPerson=_objectSpread(_objectSpread({},personInList),{},{number:newNumber});var id=personInList.id;if(window.confirm(\"\".concat(newName,\" is already added to phonebook, replace the old number with a new one?\"))){personService.update(id,newPerson).then(function(personRequest){console.log(\"\".concat(newName,\"'s phone number successfully updated\"));var newPersons=persons.map(function(person){return person.id!==id?person:personRequest;});setPersons(newPersons);setMessage(\"\".concat(newName,\" was successfully updated\"));setTimeout(function(){setMessage(null);},4000);}).catch(function(error){console.log(error.response.data);if(error.response.data.error.startsWith(\"Validation\")){setMessage(\"\".concat(error.response.data.error,\"!\"));setTimeout(function(){setMessage(null);},4000);}else if(error.response.data.error.startsWith(\"malformatted\")){setPersons(persons.filter(function(person){return person.id!==id;}));setMessage(\"Information of \".concat(personInList.name,\" has already been deleted from server!\"));setTimeout(function(){setMessage(null);},4000);}});}}else{var personObject={name:newName,number:newNumber};personService.create(personObject).then(function(returnedPerson){setPersons(persons.concat(returnedPerson));setNewName('');setNewNumber('');setMessage(\"\".concat(newName,\" was successfully added\"));setTimeout(function(){setMessage(null);},4000);}).catch(function(error){setMessage(\"\".concat(error.response.data.error,\"!\"));setTimeout(function(){setMessage(null);},4000);});}};var deletePerson=function deletePerson(id){var deletedPerson=persons.filter(function(person){return person.id===id;});var name=deletedPerson[0].name;if(window.confirm(\"Delete \".concat(name,\" from the phonebook?\"))){personService.remove(id).then(function(response){setPersons(persons.filter(function(person){return person.id!==id;}));setMessage(\"\".concat(name,\" was successfully deleted\"));setTimeout(function(){setMessage(null);},4000);}).catch(function(error){setPersons(persons.filter(function(person){return person.id!==id;}));setMessage(\"\".concat(name,\" has already been deleted!\"));setTimeout(function(){setMessage(null);},4000);});}};var handleFilter=function handleFilter(event){console.log(event.target.value);setFilter(event.target.value);};var handleNameChange=function handleNameChange(event){console.log(event.target.value);setNewName(event.target.value);};var handleNumberChange=function handleNumberChange(event){console.log(event.target.value);setNewNumber(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Notifications,{message:message}),/*#__PURE__*/_jsx(\"h1\",{children:\"Phonebook \"}),/*#__PURE__*/_jsx(Filter,{filter:filter,handleFilter:handleFilter}),/*#__PURE__*/_jsx(\"h1\",{children:\"Add a new phone record\"}),/*#__PURE__*/_jsx(PersonForm,{addPerson:addPerson,newName:newName,handleNameChange:handleNameChange,newNumber:newNumber,handleNumberChange:handleNumberChange}),/*#__PURE__*/_jsx(\"h1\",{children:\"Numbers\"}),/*#__PURE__*/_jsx(Persons,{PersonsToShow:PersonsToShow,deletePerson:deletePerson})]});};export default App;/** \nimport React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default App\n*/","map":{"version":3,"sources":["/home/springnuance/Desktop/part3/The Phonebook/src/App.js"],"names":["React","useState","useEffect","Person","Notifications","personService","Filter","filter","handleFilter","Persons","PersonsToShow","deletePerson","map","person","i","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","App","persons","setPersons","setNewName","setNewNumber","setFilter","message","setMessage","getAll","then","initialPersons","name","toLowerCase","includes","event","preventDefault","personInList","newPerson","number","id","window","confirm","update","personRequest","console","log","newPersons","setTimeout","catch","error","response","data","startsWith","personObject","create","returnedPerson","concat","deletedPerson","remove","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Notifications from './components/Notifications'\nimport personService from './services/personService'\n\nconst Filter = ({filter, handleFilter}) => {\n  return (\n    <div>Filter name <input value = {filter} onChange={handleFilter}/></div>\n  )\n}\n\nconst Persons = ({PersonsToShow, deletePerson}) => {\n  return (\n    <ul>\n    {PersonsToShow.map((person, i) => \n        <Person key={i} person={person} deletePerson = {deletePerson} />\n    )}\n  </ul>\n  )\n}\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n    <div> Name: <input value = {newName} onChange={handleNameChange}/></div>\n    <div> Number: <input value = {newNumber} onChange={handleNumberChange}/></div>\n    <div><button type=\"submit\">add</button></div>\n  </form>\n  )\n} \n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const PersonsToShow = !filter ? persons : persons.filter(person => person.name.toLowerCase().includes(filter))\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.map(person => person.name).includes(newName)){\n      const personInList = persons.filter(person => person.name === newName)[0]\n      const newPerson = { ...personInList, number: newNumber }\n      const id = personInList.id\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          personService.update(id, newPerson).then(personRequest => {\n          console.log(`${newName}'s phone number successfully updated`)\n          const newPersons = persons.map(person => person.id !== id ? person : personRequest)\n          setPersons(newPersons)\n          setMessage(`${newName} was successfully updated`)\n          setTimeout(() => {setMessage(null)}, 4000)\n        }).catch(error => {\n          console.log(error.response.data)\n          if (error.response.data.error.startsWith(\"Validation\")) {\n            setMessage(`${error.response.data.error}!`)\n            setTimeout(() => {setMessage(null)}, 4000)\n          } else if (error.response.data.error.startsWith(\"malformatted\")) {\n            setPersons(persons.filter(person => person.id !== id))\n            setMessage(`Information of ${personInList.name} has already been deleted from server!`)\n            setTimeout(() => {setMessage(null)}, 4000)\n          }\n          \n        })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n        personService.create(personObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`${newName} was successfully added`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      }).catch(error => {\n        setMessage(`${error.response.data.error}!`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      })\n    \n      \n  }\n}\n\n  const deletePerson = (id) => {\n    const deletedPerson = persons.filter(person => person.id === id)\n    const name = deletedPerson[0].name\n    if (window.confirm(`Delete ${name} from the phonebook?`)) {\n      personService.remove(id).then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage(`${name} was successfully deleted`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      }).catch(error => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage(`${name} has already been deleted!`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      })\n    }\n  }\n\n  const handleFilter = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n\n\n  return (\n    <div>\n      <Notifications message={message} />\n      <h1>Phonebook </h1>\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h1>Add a new phone record</h1>\n      <PersonForm addPerson={addPerson} \n        newName = {newName} \n        handleNameChange = {handleNameChange} \n        newNumber={newNumber} \n        handleNumberChange = {handleNumberChange}/>\n      <h1>Numbers</h1>\n      <Persons PersonsToShow={PersonsToShow} deletePerson = {deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n\n/** \nimport React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default App\n*/\n\n"]},"metadata":{},"sourceType":"module"}