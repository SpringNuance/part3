{"ast":null,"code":"var _jsxFileName = \"/home/springnuance/Desktop/part3/The Phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Person from './components/Person';\nimport Notifications from './components/Notifications';\nimport personService from './services/personService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  filter,\n  handleFilter\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Filter name \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: filter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Filter;\n\nconst Persons = ({\n  PersonsToShow,\n  deletePerson\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: PersonsToShow.map((person, i) => /*#__PURE__*/_jsxDEV(Person, {\n      person: person,\n      deletePerson: deletePerson\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Persons;\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addPerson,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNumber,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = PersonForm;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n  const PersonsToShow = !filter ? persons : persons.filter(person => person.name.toLowerCase().includes(filter));\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (persons.map(person => person.name).includes(newName)) {\n      const personInList = persons.filter(person => person.name === newName)[0];\n      const newPerson = { ...personInList,\n        number: newNumber\n      };\n      const id = personInList.id;\n\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService.update(id, newPerson).then(personRequest => {\n          console.log(`${newName}'s phone number successfully updated`);\n          const newPersons = persons.map(person => person.id !== id ? person : personRequest);\n          setPersons(newPersons);\n          setMessage(`${newName} was successfully updated`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 4000);\n        }).catch(error => {\n          console.log(error);\n          setPersons(persons.filter(person => person.id !== id));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`${error}`); //setMessage(`Information of ${personInList.name} has already been deleted from server!`)\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 40000);\n        });\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        setMessage(`${newName} was successfully added`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 4000);\n      }).catch(error => {\n        console.log(error.response.data);\n        setMessage(`${error.response.data}!`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 4000);\n      });\n    }\n  };\n\n  const deletePerson = id => {\n    const deletedPerson = persons.filter(person => person.id === id);\n    const name = deletedPerson[0].name;\n\n    if (window.confirm(`Delete ${name} from the phonebook?`)) {\n      personService.remove(id).then(response => {\n        setPersons(persons.filter(person => person.id !== id));\n        setMessage(`${name} was successfully deleted`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 4000);\n      }).catch(error => {\n        setPersons(persons.filter(person => person.id !== id));\n        setMessage(`${name} has already been deleted!`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 4000);\n      });\n    }\n  };\n\n  const handleFilter = event => {\n    console.log(event.target.value);\n    setFilter(event.target.value);\n  };\n\n  const handleNameChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notifications, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a new phone record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addPerson: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      PersonsToShow: PersonsToShow,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"J9X+zhu37KaXdGZytcDyr9NGaq0=\");\n\n_c4 = App;\nexport default App;\n/** \nimport React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default App\n*/\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"Persons\");\n$RefreshReg$(_c3, \"PersonForm\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/springnuance/Desktop/part3/The Phonebook/src/App.js"],"names":["React","useState","useEffect","Person","Notifications","personService","Filter","filter","handleFilter","Persons","PersonsToShow","deletePerson","map","person","i","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","App","persons","setPersons","setNewName","setNewNumber","setFilter","message","setMessage","getAll","then","initialPersons","name","toLowerCase","includes","event","preventDefault","personInList","newPerson","number","id","window","confirm","update","personRequest","console","log","newPersons","setTimeout","catch","error","personObject","create","returnedPerson","concat","response","data","deletedPerson","remove","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Notifications from './components/Notifications'\nimport personService from './services/personService'\n\nconst Filter = ({filter, handleFilter}) => {\n  return (\n    <div>Filter name <input value = {filter} onChange={handleFilter}/></div>\n  )\n}\n\nconst Persons = ({PersonsToShow, deletePerson}) => {\n  return (\n    <ul>\n    {PersonsToShow.map((person, i) => \n        <Person key={i} person={person} deletePerson = {deletePerson} />\n    )}\n  </ul>\n  )\n}\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n    <div> Name: <input value = {newName} onChange={handleNameChange}/></div>\n    <div> Number: <input value = {newNumber} onChange={handleNumberChange}/></div>\n    <div><button type=\"submit\">add</button></div>\n  </form>\n  )\n} \n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const PersonsToShow = !filter ? persons : persons.filter(person => person.name.toLowerCase().includes(filter))\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.map(person => person.name).includes(newName)){\n      const personInList = persons.filter(person => person.name === newName)[0]\n      const newPerson = { ...personInList, number: newNumber }\n      const id = personInList.id\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          personService.update(id, newPerson).then(personRequest => {\n          console.log(`${newName}'s phone number successfully updated`)\n          const newPersons = persons.map(person => person.id !== id ? person : personRequest)\n          setPersons(newPersons)\n          setMessage(`${newName} was successfully updated`)\n          setTimeout(() => {setMessage(null)}, 4000)\n        }).catch(error => {\n          console.log(error)\n          setPersons(persons.filter(person => person.id !== id))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`${error}`)\n          //setMessage(`Information of ${personInList.name} has already been deleted from server!`)\n          setTimeout(() => {setMessage(null)}, 40000)\n        })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n     \n        personService.create(personObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`${newName} was successfully added`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      }).catch(error => {\n        console.log(error.response.data)\n        setMessage(`${error.response.data}!`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      })\n    \n      \n  }\n}\n\n  const deletePerson = (id) => {\n    const deletedPerson = persons.filter(person => person.id === id)\n    const name = deletedPerson[0].name\n    if (window.confirm(`Delete ${name} from the phonebook?`)) {\n      personService.remove(id).then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage(`${name} was successfully deleted`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      }).catch(error => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage(`${name} has already been deleted!`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      })\n    }\n  }\n\n  const handleFilter = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n\n\n  return (\n    <div>\n      <Notifications message={message} />\n      <h1>Phonebook </h1>\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h1>Add a new phone record</h1>\n      <PersonForm addPerson={addPerson} \n        newName = {newName} \n        handleNameChange = {handleNameChange} \n        newNumber={newNumber} \n        handleNumberChange = {handleNumberChange}/>\n      <h1>Numbers</h1>\n      <Persons PersonsToShow={PersonsToShow} deletePerson = {deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n\n/** \nimport React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default App\n*/\n\n"]},"metadata":{},"sourceType":"module"}